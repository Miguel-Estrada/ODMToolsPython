"""Subclass of AddPoints, which is generated by wxFormBuilder."""

import wx

import pandas as pd

import odmtools.view.clsAddPoints as clsAddPoints



# Implementing AddPoints
class AddPoints(clsAddPoints.AddPoints):
    def __init__(self, parent):
        #super(AddPoints, self).__init__(parent)
        clsAddPoints.AddPoints.__init__(self, parent)

    # Handlers for AddPoints events.
    def onAddBtn(self, event):
        """

        :param event:
        :return:
        """
        self.olv.AddObject(self.sampleRow())
        self.sb.SetStatusText("Added a row")
        event.Skip()

    def onClearAllBtn(self, event):
        """

        :param event:
        :return:
        """
        if len(self.olv.GetObjects()) < 1:
            wx.MessageBox("Nothing to remove here", " ", wx.OK)
            return
        msg = wx.MessageDialog(None, 'Are you sure you want to delete your work?', 'Clear Everything?', wx.YES_NO | wx.ICON_WARNING |wx.NO_DEFAULT )
        value = msg.ShowModal()
        if value == wx.ID_YES:
            self.olv.SetObjects(None)
        return

    def onDeleteBtn(self, event):
        """

        :param event:
        :return:
        """
        if self.selectedObject:
            print "selectedOBjects: ", self.selectedObject
            self.olv.RemoveObject(self.selectedObject)
            self.sb.SetStatusText("Removing %s" % self.selectedObject.dataValue)
        self.selectedObject = None

        event.Skip()

    def onUploadBtn(self, event):
        """Reads csv into pandas object

        Parameters
        ----------
        filepath : string
            path to csv file
        skip : int
            indicates the skip amount to begin reading
        """

        #filepath = wx.FileDialog()
        #if not filepath:
        #    raise RuntimeError("FilePath cannot be null")

        #logger.debug("filepath: %s" % filepath)
        #logger.debug("sep: %s" % sep)
        #logger.debug("skiprows: %s" % skip)
        '''
        try:
            data = pd.read_csv(filepath, sep=str(sep), index_col=0, parse_dates=True, skiprows=int(skip))
            return data.sort()
        except:
            return None
        '''
        event.Skip()
    def onFinishedBtn(self, event):
        """

        :param event:
        :return:
        """
        event.Skip()

    def onSelected(self, event):
        object = event.GetEventObject()
        self.selectedObject = object.innerList[object.FocusedItem]

    def sampleRow(self):
        return self.Points()


class Example(wx.Frame):
    def __init__(self, parent, *args, **kwargs):
        wx.Frame.__init__(self, parent, *args, **kwargs)
        m = AddPoints(parent)
        m.Show()


if __name__ == '__main__':
    app = wx.App(useBestVisual=True)
    ex = Example(None)
    app.MainLoop()